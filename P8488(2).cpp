#include<bits/stdc++.h>
using namespace std;
const int N=1010;
const int dw[6][6]={
{0,0,4,5,3,2},
{0,0,5,4,2,3},
{5,4,0,0,0,1},
{4,5,0,0,1,0},
{2,3,1,0,0,0},
{3,2,0,1,0,0}};
//up=dw^1
typedef long long ll;
int n,m,a[N][N],w[6];
int f[N][N][6][6];
signed main(){
	memset(f,0xc0,sizeof(f));
	scanf("%d %d",&n,&m);
	for(int i=1;i<=n;i++)
	for(int j=1;j<=m;j++)
	scanf("%d",&a[i][j]);
	for(int i=0;i<6;i++)
	scanf("%d",w+i);
	//0f 1b 2l 3r 4u 5d
	//f[i][j][fr][rt];
	f[1][1][0][3]=a[1][1]*w[5];
	for(int i=1;i<=n;i++)
	for(int j=1;j<=m;j++)
	for(int fr=0;fr<6;fr++)
	for(int rt=0;rt<6;rt++){
		if(fr==rt||(fr^1)==rt||(i==1&&j==1))continue;
		f[i][j][fr][rt]=max(f[i-1][j][dw[fr][rt]][rt],f[i][j-1][fr][dw[fr][rt]])+w[dw[fr][rt]]*a[i][j];
        cout<<i<<' '<<j<<' '<<fr+1<<' '<<rt+1<<' '<<f[i][j][fr][rt]<<endl;
		//printf("%d ",f[i][j][fr][rt]);
	}
	int ans=0xc0c0c0c0;
	for(int fr=0;fr<6;fr++)
	for(int rt=0;rt<6;rt++)
	ans=max(ans,f[n][m][fr][rt]);
	printf("%d",ans);
	return 0;
}
/*
1 2 1 3 -1061109528
1 2 1 4 -1061109520
1 2 1 5 44
1 2 1 6 -1061109544
1 2 2 3 -1061109520
1 2 2 4 -1061109528
1 2 2 5 -1061109544
1 2 2 6 -1061109536
1 2 3 1 -1061109520
1 2 3 2 -1061109528
1 2 3 5 -1061109560
1 2 3 6 -1061109552
1 2 4 1 -1061109528
1 2 4 2 -1061109520
1 2 4 5 -1061109552
1 2 4 6 -1061109560
1 2 5 1 -1061109544
1 2 5 2 -1061109536
1 2 5 3 -1061109552
1 2 5 4 -1061109560
1 2 6 1 -1061109536
1 2 6 2 -1061109544
1 2 6 3 -1061109560
1 2 6 4 -1061109552
1 3 1 3 119
1 3 1 4 -1061109454
1 3 1 5 -1061109460
1 3 1 6 -1061109483
1 3 2 3 -1061109446
1 3 2 4 -1061109469
1 3 2 5 -1061109475
1 3 2 6 -1061109468
1 3 3 1 -1061109462
1 3 3 2 -1061109485
1 3 3 5 -1061109505
1 3 3 6 -1061109498
1 3 4 1 -1061109477
1 3 4 2 -1061109470
1 3 4 5 -1061109490
1 3 4 6 -1061109513
1 3 5 1 -1061109507
1 3 5 2 -1061109500
1 3 5 3 -1061109506
1 3 5 4 -1061109529
1 3 6 1 -1061109492
1 3 6 2 -1061109515
1 3 6 3 -1061109521
1 3 6 4 -1061109514
1 4 1 3 -1061109445
1 4 1 4 -1061109465
1 4 1 5 -1061109442
1 4 1 6 128
1 4 2 3 -1061109450
1 4 2 4 -1061109460
1 4 2 5 -1061109437
1 4 2 6 -1061109457
1 4 3 1 -1061109480
1 4 3 2 -1061109490
1 4 3 5 -1061109459
1 4 3 6 -1061109479
1 4 4 1 -1061109475
1 4 4 2 -1061109495
1 4 4 5 -1061109464
1 4 4 6 -1061109474
1 4 5 1 -1061109497
1 4 5 2 -1061109517
1 4 5 3 -1061109494
1 4 5 4 -1061109504
1 4 6 1 -1061109502
1 4 6 2 -1061109512
1 4 6 3 -1061109489
1 4 6 4 -1061109509
1 5 1 3 -1061109392
1 5 1 4 188
1 5 1 5 -1061109425
1 5 1 6 -1061109415
1 5 2 3 -1061109397
1 5 2 4 -1061109387
1 5 2 5 -1061109420
1 5 2 6 -1061109420
1 5 3 1 -1061109419
1 5 3 2 -1061109409
1 5 3 5 -1061109470
1 5 3 6 -1061109470
1 5 4 1 -1061109414
1 5 4 2 -1061109414
1 5 4 5 -1061109475
1 5 4 6 -1061109465
1 5 5 1 -1061109464
1 5 5 2 -1061109464
1 5 5 3 -1061109497
1 5 5 4 -1061109487
1 5 6 1 -1061109469
1 5 6 2 -1061109459
1 5 6 3 -1061109492
1 5 6 4 -1061109492
2 1 1 3 -1061109543
2 1 1 4 -1061109538
2 1 1 5 -1061109548
2 1 1 6 -1061109553
2 1 2 3 -1061109538
2 1 2 4 -1061109543
2 1 2 5 -1061109553
2 1 2 6 -1061109548
2 1 3 1 -1061109538
2 1 3 2 -1061109543
2 1 3 5 -1061109563
2 1 3 6 -1061109558
2 1 4 1 -1061109543
2 1 4 2 -1061109538
2 1 4 5 -1061109558
2 1 4 6 -1061109563
2 1 5 1 -1061109553
2 1 5 2 -1061109548
2 1 5 3 -1061109558
2 1 5 4 17
2 1 6 1 -1061109548
2 1 6 2 -1061109553
2 1 6 3 -1061109563
2 1 6 4 -1061109558
2 2 1 3 -1061109453
2 2 1 4 -1061109438
2 2 1 5 -1061109462
2 2 1 6 -1061109486
2 2 2 3 -1061109434
2 2 2 4 -1061109458
2 2 2 5 -1061109481
2 2 2 6 -1061109467
2 2 3 1 -1061109422
2 2 3 2 -1061109441
2 2 3 5 63
2 2 3 6 -1061109498
2 2 4 1 -1061109449
2 2 4 2 -1061109430
2 2 4 5 -1061109500
2 2 4 6 -1061109524
2 2 5 1 -1061109463
2 2 5 2 93
2 2 5 3 -1061109482
2 2 5 4 -1061109501
2 2 6 1 -1061109452
2 2 6 2 -1061109471
2 2 6 3 -1061109509
2 2 6 4 -1061109490
2 3 1 3 -1061109367
2 3 1 4 -1061109372
2 3 1 5 -1061109362
2 3 1 6 -1061109396
2 3 2 3 -1061109353
2 3 2 4 -1061109386
2 3 2 5 -1061109377
2 3 2 6 -1061109382
2 3 3 1 -1061109378
2 3 3 2 158
2 3 3 5 -1061109403
2 3 3 6 -1061109403
2 3 4 1 -1061109405
2 3 4 2 -1061109401
2 3 4 5 -1061109392
2 3 4 6 -1061109430
2 3 5 1 -1061109405
2 3 5 2 -1061109394
2 3 5 3 131
2 3 5 4 -1061109435
2 3 6 1 -1061109401
2 3 6 2 -1061109428
2 3 6 3 138
2 3 6 4 -1061109431
2 4 1 3 -1061109347
2 4 1 4 -1061109378
2 4 1 5 -1061109360
2 4 1 6 -1061109358
2 4 2 3 -1061109364
2 4 2 4 -1061109362
2 4 2 5 -1061109344
2 4 2 6 -1061109374
2 4 3 1 -1061109385
2 4 3 2 -1061109388
2 4 3 5 -1061109375
2 4 3 6 164
2 4 4 1 -1061109377
2 4 4 2 -1061109412
2 4 4 5 -1061109395
2 4 4 6 131
2 4 5 1 140
2 4 5 2 -1061109423
2 4 5 3 -1061109388
2 4 5 4 -1061109402
2 4 6 1 -1061109419
2 4 6 2 147
2 4 6 3 -1061109398
2 4 6 4 -1061109422
2 5 1 3 -1061109335
2 5 1 4 -1061109328
2 5 1 5 -1061109358
2 5 1 6 -1061109332
2 5 2 3 -1061109344
2 5 2 4 -1061109319
2 5 2 5 -1061109349
2 5 2 6 -1061109342
2 5 3 1 194
2 5 3 2 -1061109350
2 5 3 5 -1061109380
2 5 3 6 -1061109378
2 5 4 1 -1061109370
2 5 4 2 161
2 5 4 5 -1061109402
2 5 4 6 -1061109372
2 5 5 1 -1061109373
2 5 5 2 -1061109382
2 5 5 3 -1061109387
2 5 5 4 193
2 5 6 1 -1061109394
2 5 6 2 -1061109383
2 5 6 3 -1061109387
*/
